{
	"article": [
		{
			"articledate": "January 27, 2020",
			"articleheadline": "Thoughts on the No Code Revolution",
			"articlecontent": "There is something called the No Code Revolution that is gaining more and more steam in web development. The idea is that you can create a website without having to write code. The newest major player is Webflow, but there have been plenty of predecessors. WordPress, Wix, Weebly, and Squarespace come to mind immediately for me.\n\nNo Code is a very catchy phrase and is good for marketing the idea. However, as with most things, there is marketing and there is reality. The reality is that you can't have a website without code. This should actually be the No Coding Revolution or the Visual Coding Revolution if we were to be completely honest. There is always Code involved. The question is: How does it get created?\n\nNo Code solutions have a graphical interface that allow you to to drag and drop the visual output to the page and make changes to the layout and styles by clicking the mouse. Code editors require input via a keyboard and the creation of elements *ex nihilo*.\n\nWhich is right or better? Neither and both. It really depends on the person building the site and the project. \n\nOne of the major problems with No Code solutions is the lack of control. You are often locked into their back end and their way of writing code. In the past this has meant a lot of spaghetti code when you actually look at the output code. Admittedly, software has gotten better but you still lose control compared to writing the code yourself. I would say Webflow and WordPress give you good code in the end. \n\nAnother key issues is the interface itself. It's notoriously difficult to create a graphical user interface (GUI), especially for a complex piece of software. Every No Code system has it's own layout, icons, terminology, etc. that must be learned. This can be a frustrating part of using No Code solutions. Writing code by hand has little or none of these constraints because you're working--without the GUI meta layer--directly with standardized code. \n\nThe final issue I have with No Code solutions is the code output. Some don't give access to the full code output and some require you to pay for that access. Traditionally the output code has not been maintainable by a human. It must exist within the ecosystem of that program to work or be understood. For the end user this is no problem. For the end user's web developer it has been a big problem. Webflow does a good job writing clean code but if you don't write it carefully a site is not maintainable outside of the GUI. \n\nI experienced this first hand working with a designer on a Webflow site. He didn't give things specific class names or IDs, so there really wasn't a way to maintain the site outside of Webflow. Not ideal when you're exporting to another server. I wound up recreating the site by hand. That's not the program's fault, but without strictly adhering to some sort of useful nomenclature in the CSS the site becomes exponentially more difficult to maintain. When working with a designer or a lazy developer it's going to get messy. \n\nIn the end, I think No Code solutions are great for developers looking to cut some corners or designers who know enough about web development to make a website. Many professionals will probably not find it to be a great solution for larger production sites or when using his/her own server. The time it saves an experienced dev over coding by hand is probably negligible. \n\nThat's my two cents. I'd be interested in your thoughts. You can [connect with me on Twitter.](https://twitter.com/BrianHaferkamp) Let me know what you think."
		},
		{
			"articledate": "January 25, 2020",
			"articleheadline": "Atomic Web Design with Webflow",
			"articlecontent": "Yesterday I created a video tutorial showing how you can use Symbols in Webflow to create and reuse Atomic web design components. [Read more about Atomic web design](https://bradfrost.com/blog/post/atomic-web-design/).\n\nThe advantage to these components is that they are reusable across the site and can all be changed when you update text or styles one instance. This speeds up the development process because you don't have to recreate the same elements multiple times or go around copying and pasting elements from different parts of the site. Simply drag a symbol onto the page and you're done. \n\n<i class=\"zmdi zmdi-youtube-play\"></i> [Watch the video on YouTube](https://youtu.be/uE-I_-KgT6s)"
		},
		{
			"articledate": "January 21, 2020",
			"articleheadline": "Four Practical CSS Flexbox Examples",
			"articlecontent": "When you're learning something new it can be difficult to find a real world example for using the technique. CSS Flexbox and CSS Grid can be like that in the beginning. I put together a video showing four real-world Flexbox examples that I use every day on production websites. You'll learn\n\n- Centering\n- Creating a horizontal nav\n- Creating a two-column layout\n- Reordering with Flexbox\n\n<i class=\"zmdi zmdi-youtube-play\"></i> [Watch the video on YouTube](https://youtu.be/5-mMhJlJdFg)\n\n<i class=\"zmdi zmdi-codepen\"></i>  [Code on Codepen](https://codepen.io/brianhaferkamp/pen/ExaLjKq)"
		},
		{
			"articledate": "January 20, 2020",
			"articleheadline": "Jump starting the blog",
			"articlecontent": "I've let my blogging go by the wayside, so I'm jump starting it. I'm trying to incorporate a more sustainable model for writing the posts. \n\nIn this iteration I'm using [Mavo.io](https://mavo.io/) to add in-browser editing. This allows me to create posts without getting into any code. I just come to this website, login to Github, and start creating a new post using Mavo's interface. \n\nI also notice I spend a lot of time figuring out interesting workarounds or layouts for work and those just sort of get lost in the shuffle of new things coming across my desk. I hope to capture a few more of those here on the blog so that I can revisit them and others can learn from my ~~mistakes~~ efforts.\n\nSo maybe not a post a day, but when things are blog worthy or I release a new tutorial video, it will get collected here. I'm hoping that's a more sustainable model.\n\nImpressed and want to share this wisdom with others, use the social icons to the right at the bottom of the viewport. To link to a specific post, highlight and share the link below each article. It will send the user directly to the post on this page.\n\nTake the time to follow me on Twitter. I share interesting articles and tidbits there that probably won't wind up here. You can also use Twitter to leave me a comment or DM me if you'd like to talk. I look forward to connecting with you."
		}
	]
}